'use client';

import { ResponsiveLine } from '@nivo/line';

type chartProps = {
	gamesPlayed: number[];
};

const GamesChart = ({ gamesPlayed }: chartProps) => {
	//weird hack to stop annoying warnings in console generated by nivo chart
	const error = console.error;
	console.error = (...args: any) => {
		if (/defaultProps/.test(args[0])) return;
		error(...args);
	};

	// generate labels for last 7 days
	let labelsGenerated = [];
	const today = new Date();
	for (var i = 0; i < 7; i++) {
		let date = new Date(
			today.getFullYear(),
			today.getMonth(),
			today.getDate() - i
		);
		labelsGenerated.push(date.toLocaleDateString());
	}
	labelsGenerated.reverse();

	const chartData = [
		{
			id: 1,
			data: [
				{
					x: labelsGenerated[0],
					y: gamesPlayed[0]
				},
				{
					x: labelsGenerated[1],
					y: gamesPlayed[1]
				},
				{
					x: labelsGenerated[2],
					y: gamesPlayed[2]
				},
				{
					x: labelsGenerated[3],
					y: gamesPlayed[3]
				},
				{
					x: labelsGenerated[4],
					y: gamesPlayed[4]
				},
				{
					x: labelsGenerated[5],
					y: gamesPlayed[5]
				},
				{
					x: labelsGenerated[6],
					y: gamesPlayed[6]
				}
			]
		}
	];

	return (
		<div className="h-80 w-screen sm:w-1/2">
			<ResponsiveLine
				colors="yellow"
				theme={{
					axis: {
						ticks: {
							text: {
								fontSize: 14,
								fill: 'yellow'
							}
						}
					}
				}}
				data={chartData}
				margin={{ top: 20, right: 50, bottom: 70, left: 50 }}
				xScale={{ type: 'point' }}
				yScale={{
					type: 'linear',
					min: 0,
					max: 'auto'
				}}
				axisBottom={{
					tickPadding: 5,
					tickRotation: 45
				}}
				lineWidth={4}
				pointSize={12}
				pointBorderWidth={2}
				pointLabelYOffset={-12}
				useMesh={true}
			/>
		</div>
	);
};

export default GamesChart;
